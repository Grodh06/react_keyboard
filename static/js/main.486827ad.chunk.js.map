{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","key","event","setState","console","log","document","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAyB,CACvBC,WAAY,2BAFhB,EAaEC,IAAM,SAACC,GACa,MAAdA,EAAMD,IACR,EAAKE,SAAS,CAAEH,WAAY,kCAE5B,EAAKG,SAAS,CAAEH,WAAW,2BAAD,OAA6BE,EAAMD,OAI/DG,QAAQC,IAAIH,EAAMD,MArBtB,uDAKE,WACEK,SAASC,iBAAiB,QAASC,KAAKP,OAN5C,kCASE,WACEK,SAASG,oBAAoB,QAASD,KAAKP,OAV/C,oBAwBE,WACE,OACE,qBAAKS,UAAU,MAAf,SACE,4BACGF,KAAKT,MAAMC,mBA5BtB,GAAyBW,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.486827ad.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  pressedKey: string\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    pressedKey: 'Nothing was pressed yet',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.key);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.key);\n  }\n\n  key = (event: KeyboardEvent) => {\n    if (event.key === ' ') {\n      this.setState({ pressedKey: 'The last pressed key is Space' });\n    } else {\n      this.setState({ pressedKey: `The last pressed key is ${event.key}` });\n    }\n\n    // eslint-disable-next-line no-console\n    console.log(event.key);\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <p>\n          {this.state.pressedKey}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}